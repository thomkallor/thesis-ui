FROM nvidia/cuda:10.0-cudnn7-devel-ubuntu18.04

## install basic dependencies
RUN apt-get update && apt-get install -y \
	curl \
    git \
    g++ \
    libssl-dev \
    software-properties-common \
    sudo \
    wget

RUN wget https://repo.anaconda.com/miniconda/Miniconda2-latest-Linux-x86_64.sh \
    && bash Miniconda2-latest-Linux-x86_64.sh -b \
    && rm -f Miniconda2-latest-Linux-x86_64.sh
ENV PATH="/root/miniconda2/bin:${PATH}"

## Required by theano
RUN conda install numpy cmake
RUN python -m pip install msgpack pydot-ng parameterized mako
RUN conda install Cython

RUN git clone https://github.com/Theano/libgpuarray.git
RUN cd libgpuarray && git checkout tags/v0.6.5 -b v0.6.9
RUN cd libgpuarray && mkdir Build && cd Build && \
    cmake .. -DCMAKE_BUILD_TYPE=Release && \
    make && make install
RUN cd libgpuarray && python setup.py build && python setup.py install 
RUN ldconfig

# Install Theano
RUN pip --no-cache-dir install git+git://github.com/Theano/Theano.git@${THEANO_VERSION}
RUN pip --no-cache-dir install https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow_gpu-1.15.0-cp27-cp27mu-manylinux2010_x86_64.whl

RUN git clone https://github.com/keras-team/keras.git
RUN cd keras && git checkout 1.0.8 && python setup.py install


## caffe needs <=gcc5
RUN add-apt-repository ppa:ubuntu-toolchain-r/test
RUN apt-get update && apt-get install -y gcc-4.8 g++-4.8

# assign higher priority to gcc-5 caffe uses gcc-5
RUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.8 100 && \
	update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-5 75

RUN update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.8 100 && \
	update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-5 75

## install cuda8.0 for caffe
RUN wget https://developer.nvidia.com/compute/cuda/8.0/Prod2/local_installers/cuda-repo-ubuntu1604-8-0-local-ga2_8.0.61-1_amd64-deb
RUN yes | dpkg -i ./cuda-repo-ubuntu1604-8-0-local-ga2_8.0.61-1_amd64-deb
RUN apt-get update && apt-get install -y cuda-toolkit-8-0
RUN rm cuda-repo-ubuntu1604-8-0-local-ga2_8.0.61-1_amd64-deb

ENV LIBRARY_PATH="/usr/local/cuda/lib64:$LIBRARY_PATH"
ENV LD_LIBRARY_PATH="/usr/local/cuda-8.0/lib64:$LD_LIBRARY_PATH"
ENV PATH="/usr/local/cuda/bin:$PATH"

#CuDNN installation cudnn6
RUN wget http://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1604/x86_64/libcudnn6_6.0.21-1+cuda8.0_amd64.deb && \
	wget http://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1604/x86_64/libcudnn6-dev_6.0.21-1+cuda8.0_amd64.deb
RUN yes | dpkg -i ./libcudnn6_6.0.21-1+cuda8.0_amd64.deb && \
	yes | dpkg -i ./libcudnn6-dev_6.0.21-1+cuda8.0_amd64.deb
RUN apt-get update && apt-get install -y libcudnn6-dev
RUN rm libcudnn6_6.0.21-1+cuda8.0_amd64.deb && \
	rm libcudnn6-dev_6.0.21-1+cuda8.0_amd64.deb

## Dependencies of caffe
RUN apt-get update && apt-get install -y \
		libgflags-dev \
		libgoogle-glog-dev \
		libleveldb-dev \
		liblmdb-dev \
        libprotobuf-dev \
		protobuf-compiler \
		&& \
	apt-get clean && \
	apt-get autoremove && \
	rm -rf /var/lib/apt/lists/*


RUN conda install -c intel boost=1.61.0
RUN conda install -c conda-forge hdf5 openblas
RUN python -m pip install --upgrade msgpack python-dateutil pytest
RUN conda install -c mvn libsnappy
## install opencv3 caffe doesnot support opencv 4
RUN conda install -c menpo opencv3


RUN git clone https://github.com/BVLC/caffe.git /root/caffe

RUN cd /root/caffe && mkdir build && cd build && \
	cmake -DPYTHON_INCLUDE_DIR=/root/miniconda2/include/python2.7 \
	-DPYTHON_INCLUDE_DIR2=/root/miniconda2/include/python2.7 \
	-DPYTHON_LIBRARY=/root/miniconda2/lib/libpython2.7.so \
	-Dpython_version=2 \
	-DUSE_CUDNN=1 \
	-DBLAS=Open \
	..  && \
	make -j"$(nproc)" all && \
	make install

RUN conda install jupyter

# Set up notebook config
COPY jupyter_notebook_config.py /root/.jupyter/

# Jupyter has issues with being run directly: https://github.com/ipython/ipython/issues/7062
COPY run_jupyter.sh /root/

# Expose Ports for TensorBoard (6006), Ipython (8888)
EXPOSE 6006 8888

RUN mkdir .keras
COPY keras.json /.keras

WORKDIR "/root"
CMD ["/bin/bash"]
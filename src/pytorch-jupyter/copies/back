
RUN wget http://developer.download.nvidia.com/compute/cuda/7_0/Prod/local_installers/rpmdeb/cuda-repo-ubuntu1410-7-0-local_7.0-28_amd64.deb

RUN yes | dpkg -i ./cuda-repo-ubuntu1410-7-0-local_7.0-28_amd64.deb

RUN apt-get update && apt-get install -y cuda-toolkit-7-0

RUN rm cuda-repo-ubuntu1410-7-0-local_7.0-28_amd64.deb

RUN wget http://security.ubuntu.com/ubuntu/pool/main/o/openssl/libssl-dev_1.1.1c-1ubuntu4.1_amd64.deb && \
    wget http://security.ubuntu.com/ubuntu/pool/main/o/openssl/libssl1.1_1.1.1c-1ubuntu4.1_amd64.deb && \
    wget http://cz.archive.ubuntu.com/ubuntu/pool/main/g/glibc/libc6_2.30-0ubuntu2_amd64.deb

RUN dpkg -i libc6_2.30-0ubuntu2_amd64.deb \
    libssl1.1_1.1.1c-1ubuntu4.1_amd64.deb \
    libssl-dev_1.1.1c-1ubuntu4.1_amd64.deb

RUN rm libssl-dev_1.1.1c-1ubuntu4.1_amd64.deb \
    libssl1.1_1.1.1c-1ubuntu4.1_amd64.deb \
    libc6_2.30-0ubuntu2_amd64.deb

# RUN wget https://github.com/protocolbuffers/protobuf/releases/download/v3.11.2/protoc-3.11.2-linux-x86_64.zip
# RUN unzip protoc-3.11.2-linux-x86_64.zip -d ./protoc
# RUN mv protoc/bin/* /usr/local/bin/ && \
# 	mv protoc/include/* /usr/local/include/

# RUN cd /usr/local && wget https://github.com/protocolbuffers/protobuf/releases/download/v3.11.4/protobuf-python-3.2.0.tar.gz
# RUN cd /usr/local && tar -xvf protobuf-python-3.11.4.tar.gz
# RUN cd /usr/local/protobuf-3.11.4/python && \
# 	python setup.py build && \
# 	python setup.py test && \
# 	python setup.py install

# RUN python -m pip install protobuf==3.11.2

# # RUN wget https://github.com/protocolbuffers/protobuf/releases/download/v3.2.0/protoc-3.2.0-linux-x86_64.zip
# # RUN unzip protoc-3.2.0-linux-x86_64.zip -d ./protoc
# # RUN rm  protoc-3.2.0-linux-x86_64.zip
# ENV PATH=/protoc/bin:$PATH
# RUN python -m pip install pytest protobuf==3.2.0
# # RUN python -m pip install pytest protobuf==3.11.2
# ENV LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH
# Install Caffe



RUN git clone -b ${CAFFE_VERSION} https://github.com/thomkallor/caffe.git /root/caffe

## caffe needs gcc5
# RUN add-apt-repository ppa:ubuntu-toolchain-r/test
# RUN apt-get update && apt-get install -y gcc-5 g++-5
# # assign higher priority to gcc-5 caffe uses gcc-5
# RUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-5 100 && \
# 	update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.8 75
# ## make gcc common
# RUN update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-5 100 && \
# 	update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.8 75

RUN conda install -c anaconda protobuf
RUN	cd /root/caffe && \
	cat python/requirements.txt | xargs -n1 pip install
RUN cd /root/caffe && git pull origin master
RUN cd /root/caffe && git pull origin master
RUN cd /root/caffe && git pull origin master

RUN apt-get purge -y libopencv-dev

RUN conda install -c menpo opencv3

RUN cd /root/caffe && mkdir build && cd build && \
	cmake -DPYTHON_INCLUDE_DIR=/root/anaconda3/include/python3.5m \
	-DPYTHON_INCLUDE_DIR2=/root/anaconda3/include/python3.5m \
	-DPYTHON_LIBRARY=/root/anaconda3/lib/libpython3.5m.so \
	-Dpython_version=3 \
	-DUSE_CUDNN=1 \
	-DBLAS=Open \
	..  && \
	make -j"$(nproc)" all && \
	make install

# RUN cd /root/caffe && \
#     cp Makefile.config.example Makefile.config && \
# 	make clean && \
#     make -j"$(nproc)" all
# Set up Caffe environment variables


# ENV CAFFE_ROOT=/root/caffe
# ENV PYCAFFE_ROOT=$CAFFE_ROOT/python
# ENV PYTHONPATH=$PYCAFFE_ROOT:$PYTHONPATH \
# 	PATH=$CAFFE_ROOT/build/tools:$PYCAFFE_ROOT:$PATH
# RUN echo "$CAFFE_ROOT/build/lib" >> /etc/ld.so.conf.d/caffe.conf && ldconfig

# RUN cd /root/caffe && make pycaffe

# ## caffe dependency


# RUN wget https://github.com/protocolbuffers/protobuf/releases/download/v3.2.0/protoc-3.2.0-linux-x86_64.zip
# RUN unzip protoc-3.2.0-linux-x86_64.zip -d ./protoc
# ENV PATH=/protoc/bin:$PATH
# RUN cd /usr/local && wget https://github.com/protocolbuffers/protobuf/releases/download/v3.2.0/protobuf-python-3.2.0.tar.gz
# RUN cd /usr/local && tar -xvf protobuf-python-3.2.0.tar.gz
# RUN cd /usr/local/protobuf-3.2.0/python && \
# 	python setup.py build && \
# 	python setup.py test && \
# 	python setup.py install

# RUN rm /usr/local/protobuf-python-3.2.0.tar.gz

RUN conda install boost

RUN python -m pip install pytest